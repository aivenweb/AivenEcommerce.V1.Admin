@inject IJSRuntime JSRuntime
@inject IApiOptions ApiOptions

<div class="modal fade" id="updateProductImageModal" backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="updateProductImageModalTitle" aria-hidden="true" data->
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateProductImageModalTitle">Subir imagenes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnCloseCallback">
                    <i data-feather="x"></i>
                </button>
            </div>
            <div class="modal-body">
                <section>
                    <div id="dropzone">
                        <form class="dropzone needsclick" id="demo-upload" action="/xxx" method="post" enctype="multipart/form-data">
                        </form>
                    </div>
                </section>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary ml-1" data-dismiss="modal" @onclick="OnCloseCallback">
                    <i class="bx bx-check d-block d-sm-none"></i>
                    <span class="d-none d-sm-block">Aceptar</span>
                </button>
            </div>
        </div>
    </div>
</div>

@code{

    [Parameter]
    public string ProductId { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnCloseCallback { get; set; }

    public async Task Show()
    {
        await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.showModal", "updateProductImageModal").AsTask();
        await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.createDropZone", "#demo-upload", Path.Combine(ApiOptions.BaseAddress, $"api/v1/ProductImages/product/{ProductId}/uploadfile")).AsTask();

    }
}