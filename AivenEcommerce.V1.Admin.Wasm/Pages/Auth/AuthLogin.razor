@layout AuthLayout
@inject IJSRuntime JSRuntime
@inject IIdentityService IdentityService

@inject NavigationManager NavigationManager
@inject ISyncSessionStorageService sessionStorage
@attribute [AllowAnonymous]
@page "/login"


<div class="container">
    <div class="row">
        <div class="col-md-5 col-sm-12 mx-auto">
            <div class="card pt-4">
                <div class="card-body">
                    <div class="text-center mb-5">
                        <img src="assets/images/favicon.svg" height="48" class='mb-4'>
                        <h3>Iniciar Sesión</h3>
                        <p>Inicia sesión para continuar con su dashboard.</p>
                        <p class="text-red">@messageError</p>

                    </div>

                    <div class="form-group position-relative has-icon-left">
                        <label for="email">Email</label>
                        <div class="position-relative">
                            <input type="email" class="form-control" id="email" @bind-value=email>
                            <div class="form-control-icon">
                                <i data-feather="user"></i>
                            </div>
                        </div>
                    </div>
                    <div class="form-group position-relative has-icon-left">
                        <div class="clearfix">
                            <label for="password">Contraseña</label>
                            <a href="auth-forgot-password.html" class='float-right'>
                                <small>¿Olvido su contraseña?</small>
                            </a>
                        </div>
                        <div class="position-relative">
                            <input type="password" class="form-control" id="password" @bind-value=password>
                            <div class="form-control-icon">
                                <i data-feather="lock"></i>
                            </div>
                        </div>
                    </div>

                    <div class='form-check clearfix my-4'>
                        <div class="checkbox float-left">
     @*                       <input type="checkbox" id="checkbox1" class='form-check-input'>
                            <label for="checkbox1">Recordarme</label>*@
                        </div>
                        <div class="float-right">
                            <a href="auth-register.html">¿No tienes una cuenta?</a>
                        </div>
                    </div>
                    <div class="clearfix">
                        <button class="btn btn-primary float-right" @onclick=LoginOnClick>Entrar</button>
                    </div>

                  @*  <div class="divider">
                        <div class="divider-text">OR</div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <button class="btn btn-block mb-2 btn-primary"><i data-feather="facebook"></i> Facebook</button>
                        </div>
                        <div class="col-sm-6">
                            <button class="btn btn-block mb-2 btn-secondary"><i data-feather="github"></i> Github</button>
                        </div>
                    </div>*@
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    string email = string.Empty;
    string password = string.Empty;

    string messageError = string.Empty;

    protected override void OnInitialized()
    {
        sessionStorage.RemoveItem("user-authenticated");
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.replaceIcons").AsTask();
        }
    }


    async Task LoginOnClick(MouseEventArgs args)
    {
        var result = await IdentityService.Login(new(email, password));

        if (result.IsSuccess)
        {
            sessionStorage.SetItem("user-authenticated", result.Result);
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            messageError = result.Validations.Messages.First().Message;
        }
    }

}
