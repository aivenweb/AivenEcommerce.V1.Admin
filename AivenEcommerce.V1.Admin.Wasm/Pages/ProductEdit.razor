@page "/products/edit/{ProductId}"@inject IJSRuntime JSRuntime@inject AlertComponentService AlertService@inject NavigationManager NavigationManager@inject IProductService ProductService@inject IProductOverviewService ProductOverviewService<div class="main-content container-fluid">    <div class="page-title">        <div class="row">            <div class="col-12 col-md-6 order-md-1 order-last">                <h3>Editar Producto</h3>            </div>            <div class="col-12 col-md-6 order-md-2 order-first">                <nav aria-label="breadcrumb" class='breadcrumb-header'>                    <ol class="breadcrumb">                        <li class="breadcrumb-item"><NavLink href="/">Dashboard</NavLink></li>                        <li class="breadcrumb-item"><NavLink href="@("/products/" + ProductId)">Producto</NavLink></li>                        <li class="breadcrumb-item active" aria-current="page">Editar</li>                    </ol>                </nav>            </div>        </div>    </div>    <section class="section">        <div class="card">            <div class="card-header">                <h4 class="card-title">¿Que vas a vender?</h4>            </div>            <div class="card-content">                <div class="card-body">                    <div class="row">                        <div class="col-12">                            <div class="form-group">                                <label for="first-name-column">Nombre del Producto</label>                                <input type="text" id="first-name-column" class="form-control" placeholder="Nombre" autocomplete="off" name="fname-column" @bind="name" />                            </div>                        </div>                    </div>                </div>                @if (!string.IsNullOrWhiteSpace(description))                {    <div class="card-body">        <p>Escribe una descripción completa donde podras incluir links, imagenes, videos y más </p>        <div id="full">            @((MarkupString)description)        </div>    </div>}                <div class="card-body">                    <div class="col-12 d-flex justify-content-end">                        <button class="btn btn-primary mr-1 mb-1" @onclick="Save">Guardar</button>                        <NavLink href="@("/products/" + ProductId)" class="btn btn-light-secondary mr-1 mb-1">Volver</NavLink>                    </div>                </div>            </div>        </div>    </section></div>@code{ [Parameter]    public string ProductId { get; set; }    string name = string.Empty;    string description = string.Empty;    ProductDto Product;    protected override async Task OnInitializedAsync()    {        var productResult = await this.ProductService.GetAsync(ProductId);        Product = productResult.Result;        name = Product.Name;        var productOverviewResult = await this.ProductOverviewService.GetByProductAsync(ProductId);        description = productOverviewResult.Result.Description;    }    protected override async Task OnAfterRenderAsync(bool firstRender)    {        if (!firstRender)        {            await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.createEditor", "#full");        }    }    async Task Save(MouseEventArgs args)    {        var newDescription = await JSRuntime.InvokeAsync<string>("AivenEcommerceAdmin.getEditorHtml");        await ProductService.UpdateNameDescriptionAsync(new (ProductId, name, newDescription));        NavigationManager.NavigateTo("/products/" + ProductId);    }}