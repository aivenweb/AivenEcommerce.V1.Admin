@page "/categories/{CategoryName}/edit"


@inject IJSRuntime JSRuntime
@inject AlertComponentService AlertService
@inject NavigationManager NavigationManager
@inject IProductCategoryService ProductCategoryService

<div class="main-content container-fluid">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>Editar Categoria</h3>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class='breadcrumb-header'>
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><NavLink href="/">Dashboard</NavLink></li>
                        <li class="breadcrumb-item"><NavLink href="/categories">Categorias</NavLink></li>
                        <li class="breadcrumb-item active" aria-current="page">Nuevo</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <section class="section">
        <div class="row">
            <div class="col-6">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Categoria</h4>
                    </div>
                    <div class="card-content">
                        <div class="card-body">
                            <div class="form-group">
                                <label for="first-name-column">Nombre Actual</label>
                                <input type="text" class="form-control" disabled @bind-value="CategoryName" />
                            </div>
                            <div class="form-group">
                                <label for="first-name-column">Nombre Nuevo</label>
                                <input type="text" id="first-name-column" class="form-control" placeholder="Nombre" autocomplete="off" name="fname-column" @bind="newName" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-6">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">SubCategorias</h4>
                    </div>
                    <div class="card-content">
                        <div class="card-body">
                            <div class="input-group mb-3" id="subcategory-input">
                                <input type="text" class="form-control" placeholder="Agrega una subcategoria" aria-label="Recipient's username"
                                       aria-describedby="button-addon2" @bind="subcategory">
                                <button class="btn icon btn-primary" @onclick="AddSubCategoryOnClick"><i data-feather="plus"></i></button>
                            </div>

                            @if (newSubcategories.Any())
                            {
                                <div class="subcategory-list">
                                    @foreach (var item in newSubcategories)
                                    {
                                        <div class="row subcategory-row">
                                            <div class="col-6 d-flex justify-content-lg-start subcategory-name">
                                                @item
                                            </div>
                                            <div class="col-6 d-flex justify-content-lg-end subcategory-delete">
                                                <button @onclick="(e) => RemoveSubCategoryOnClick(item, e)" class="btn icon icon-left btn-danger"><i data-feather="x"></i></button>
                                            </div>
                                        </div>
                                    }
                                </div>

                            }

                            @if (category is not null)
                            {
                                <div class="subcategory-list">
                                    @foreach (var item in category.SubCategories)
                                    {
                                        <div class="row subcategory-row">
                                            <div class="col-6 d-flex justify-content-lg-start subcategory-name">
                                                @item
                                            </div>
                                        </div>
                                    }
                                </div>

                            }



                        </div>
                    </div>

                </div>
                <div class="col-12 d-flex justify-content-end">
                    <button class="btn btn-primary mr-1 mb-1 " @onclick="Save">Guardar</button>
                    <NavLink href="/categories" class="btn btn-light-secondary mr-1 mb-1">Cancelar</NavLink>
                </div>
            </div>
        </div>

    </section>
</div>

@code{
    [Parameter]
    public string CategoryName { get; set; }

    string newName = string.Empty;
    string subcategory = string.Empty;

    List<string> newSubcategories = new List<string>();

    ProductCategoryDto category = null;


    protected override async Task OnInitializedAsync()
    {
        newName = string.Empty;
        subcategory = string.Empty;

        var result = await ProductCategoryService.GetAsync(CategoryName);
        category = result.Result;
    }

    void AddSubCategoryOnClick(MouseEventArgs args)
    {
        if (!string.IsNullOrWhiteSpace(subcategory) && !newSubcategories.Any(x => x == subcategory))
        {
            newSubcategories.Insert(0, subcategory);
            subcategory = string.Empty;
            StateHasChanged();
        }
    }

    void RemoveSubCategoryOnClick(string subcategory, MouseEventArgs args)
    {
        newSubcategories = newSubcategories.Where(x => x != subcategory).ToList();
        StateHasChanged();
    }


    async Task Save(MouseEventArgs args)
    {
        string categoryname = string.IsNullOrWhiteSpace(newName) ? CategoryName : newName;
        var result = await ProductCategoryService.UpdateAsync(new(CategoryName, categoryname, category.SubCategories.Concat(newSubcategories)));

        if (result.IsSuccess)
        {
            NavigationManager.NavigateTo("/categories");
        }
        else
        {
            AlertService.Show("Editar Categoria", result.Validations.Messages.First().Message, "danger");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.replaceIcons").AsTask();
    }
}