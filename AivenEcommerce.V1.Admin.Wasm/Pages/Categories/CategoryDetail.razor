@page "/categories/{CategoryName}"
@inject IJSRuntime JSRuntime
@inject IProductCategoryService CategoryService

@implements IAsyncDisposable

<div class="main-content container-fluid">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>@CategoryName <NavLink href="@($"/categories/{CategoryName}/edit/")" class="btn icon btn-outline-primary"><i data-feather="edit"></i></NavLink></h3>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class='breadcrumb-header'>
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><NavLink href="/">Dashboard</NavLink></li>
                        <li class="breadcrumb-item"><NavLink href="/categories">Categorias</NavLink></li>
                        <li class="breadcrumb-item active" aria-current="page">@CategoryName</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <section class="section">
        <div class="card">
            <div class="card-header">
                <NavLink href="/categories/create" class="btn icon btn-secondary"><i data-feather="plus"></i> Crear Nuevo</NavLink>
            </div>
            <div class="card-body">

                @if (SubCategoryDtos is not null)
                {
                    <table class='table table-striped' id="table1">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Cantidad de Productos</th>
                                <th></th>

                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in SubCategoryDtos)
                            {
                                <tr>

                                    <td>@item.SubCategoryName</td>
                                    <td><NavLink href="@($"/products/categories/{item.CategoryName}/subcategories/{item.SubCategoryName}")">@item.ProductCount</NavLink></td>

                                    <td data-sortable="false">
                                        <NavLink href="@($"/categories/{item.CategoryName}/{item.SubCategoryName}/edit")" class="btn icon icon-left btn-primary"><i data-feather="edit"></i> Editar</NavLink>

                                    </td>
                                </tr>
                            }


                        </tbody>
                    </table>
                }

            </div>
        </div>

    </section>
</div>

@code {

    [Parameter]
    public string CategoryName { get; set; }


    IEnumerable<ProductSubCategoryDto> SubCategoryDtos;

    // Load the module and keep a reference to it
    // You need to use .AsTask() to convert the ValueTask to Task as it may be awaited multiple times
    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JSRuntime.InvokeAsync<IJSObjectReference>("import", "./assets/js/vendors.js").AsTask();

    async Task Submit()
    {
        var module = await Module;
        await module.InvokeVoidAsync("dataTable");
    }

    public async ValueTask DisposeAsync()
    {
        if (_module is not null)
        {
            var module = await _module;
            await module.DisposeAsync();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await CategoryService.GetSubCategoriesAsync(CategoryName);
        if (result.IsSuccess)
        {
            SubCategoryDtos = result.Result;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            await Submit();
            await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.replaceIcons").AsTask();
        }
    }
}
