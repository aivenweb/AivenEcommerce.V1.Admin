@page "/products/create"@inject IJSRuntime JSRuntime@inject AlertComponentService AlertService@inject NavigationManager NavigationManager@inject IProductService ProductService@inject IProductCategoryService ProductCategoryService<div class="main-content container-fluid">    <div class="page-title">        <div class="row">            <div class="col-12 col-md-6 order-md-1 order-last">                <h3>Nuevo Producto</h3>            </div>            <div class="col-12 col-md-6 order-md-2 order-first">                <nav aria-label="breadcrumb" class='breadcrumb-header'>                    <ol class="breadcrumb">                        <li class="breadcrumb-item"><NavLink href="/">Dashboard</NavLink></li>                        <li class="breadcrumb-item"><NavLink href="/products">Productos</NavLink></li>                        <li class="breadcrumb-item active" aria-current="page">Nuevo</li>                    </ol>                </nav>            </div>        </div>    </div>    <section class="section">        <div class="card">            <div class="card-header">                <h4 class="card-title">¿Que vas a vender?</h4>            </div>            <div class="card-content">                <div class="card-body">                    <div class="row">                        <div class="col-12">                            <div class="form-group">                                <label for="first-name-column">Nombre del Producto</label>                                <input type="text" id="first-name-column" class="form-control" placeholder="Nombre" autocomplete="off" name="fname-column" @bind="name" />                            </div>                        </div>                        <div class="col-md-6 col-12">                            <div class="form-group">                                <label for="last-name-column">Costo</label>                                <input type="number" id="last-name-column" class="form-control" placeholder="Costo" autocomplete="off" name="lname-column" @bind="cost" />                            </div>                        </div>                        @*<div class="col-md-6 col-12">                            <div class="form-group">                                <label for="city-column">Breve Descripción</label>                                <input type="text" id="city-column" class="form-control" placeholder="Descripción" autocomplete="off" name="city-column" @bind="description">                            </div>                        </div>*@                        <div class="col-md-6 col-12">                            <div class="form-group">                                <label for="country-floating">Precio</label>                                <input type="number" id="country-floating" class="form-control" name="country-floating" autocomplete="off" placeholder="Precio" @bind="price">                            </div>                        </div>                        <div class="col-md-6 col-12">                            <div class="form-group">                                <label for="product-create-category">Categoria</label>                                <select class="choices form-select" id="product-create-category" @onchange=CategoryChange>                                    <option value="">Selecciona una categoria</option>                                    @if (productCategories != null)                        @foreach (var item in productCategories)                        {        <option value="@item.Name">@item.Name</option>}                                </select>                            </div>                        </div>                        @if (showSubcategory)                        {            <div class="col-md-6 col-12">                <div class="form-group">                    <label for="product-create-subcategory">Subcategoria</label>                    <select class="choices form-select" id="product-create-subcategory" @onchange=SubCategoryChange>                        <option value="">Selecciona una subcategoria</option>                        @if (productCategory is not null)                        {        @foreach (var item in productCategory.SubCategories)        {<option value="@item">@item</option>}}                    </select>                </div>            </div>}                        <div class="col-12 d-flex justify-content-end">                            <button class="btn btn-primary mr-1 mb-1" @onclick="Save">Crear</button>                            <NavLink href="/products" class="btn btn-light-secondary mr-1 mb-1">Cancelar</NavLink>                        </div>                    </div>                </div>            </div>        </div>    </section></div>@code{     string category = string.Empty;    string subcategory = string.Empty;    string name = string.Empty;    decimal cost = 0;    int price = 0;    bool showSubcategory = false;    IEnumerable<ProductCategoryDto> productCategories;    ProductCategoryDto productCategory;    protected override void OnInitialized()    {        category = string.Empty;        subcategory = string.Empty;        ProductCategoryService.GetAllAsync().ContinueWith(x =>        {            productCategories = x.Result.Result;            StateHasChanged();        });    }    async Task CategoryChange(ChangeEventArgs e)    {        category = e.Value.ToString();        await ProductCategoryService.GetAsync(e.Value.ToString()).ContinueWith(async x =>        {            showSubcategory = false;            StateHasChanged();            productCategory = x.Result.Result;            subcategory = productCategory.SubCategories.First();            showSubcategory = true;            StateHasChanged();            await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.createChoice", "select#product-create-subcategory");        });    }    void SubCategoryChange(ChangeEventArgs e)    {        subcategory = e.Value.ToString();    }    protected override async Task OnAfterRenderAsync(bool firstRender)    {        if (!firstRender)        {            await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.createChoice", "select#product-create-category");            await JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.createChoice", "select#product-create-subcategory");        }    }    async Task Save(MouseEventArgs args)    {        var result = await ProductService.CreateProduct(new(name, name, cost, price, category, subcategory));        if (result.IsSuccess)        {            NavigationManager.NavigateTo("/products/" + result.Result.Id);        }        else        {            AlertService.Show("Crear Producto", result.Validations.Messages.First().Message, "danger");        }    }}}