@page "/couponcodes/{Code}/edit"@inject IJSRuntime JSRuntime@inject AlertComponentService AlertService@inject NavigationManager NavigationManager@inject ICouponCodeService CouponCodeService<div class="main-content container-fluid">    <div class="page-title">        <div class="row">            <div class="col-12 col-md-6 order-md-1 order-last">                <h3>Editar Cupón</h3>            </div>            <div class="col-12 col-md-6 order-md-2 order-first">                <nav aria-label="breadcrumb" class='breadcrumb-header'>                    <ol class="breadcrumb">                        <li class="breadcrumb-item"><NavLink href="/">Dashboard</NavLink></li>                        <li class="breadcrumb-item"><NavLink href="/couponcodes">Cupones</NavLink></li>                        <li class="breadcrumb-item active" aria-current="page">Editar</li>                    </ol>                </nav>            </div>        </div>    </div>    <section class="section">        <div class="card">            <div class="card-header">                <h4 class="card-title">Cupón</h4>            </div>            <div class="card-content">                <div class="card-body">                    <div class="row">                        <div class="col-12">                            <div class="form-group">                                <label for="first-name-column">Código del Cupón</label>                                <input type="text" id="first-name-column" class="form-control" placeholder="Código" autocomplete="off" name="fname-column" @bind="Code" />                            </div>                        </div>                        <div class="col-md-6 col-12">                            <div class="form-group">                                <label>Tipo de Descuento</label>                                <div class="form-check">                                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1" value="@( (int)CouponCodeOffType.Percentage)" @onchange="RadioSelection" checked=@(type == CouponCodeOffType.Percentage)>                                    <label class="form-check-label" for="flexRadioDefault1">                                        Porcentaje                                    </label>                                </div>                                <div class="form-check">                                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" value="@( (int)CouponCodeOffType.SpecificAmount)" @onchange="RadioSelection" checked=@(type == CouponCodeOffType.SpecificAmount)>                                    <label class="form-check-label" for="flexRadioDefault2">                                        Monto                                    </label>                                </div>                            </div>                        </div>                        <div class="col-md-6 col-12">                            <label>Valor</label>                            <div class="form-group">                                <input type="number" id="country-floating" class="form-control" name="country-floating" autocomplete="off" placeholder="Valor" @bind="value">                            </div>                        </div>                        <div class="col-md-6 col-12">                            <div class="form-group">                                <label for="country-floating">Monto Mínimo</label>                                <input type="number" id="country-floating" class="form-control" name="country-floating" autocomplete="off" placeholder="Monto Mínimo" @bind="minAmount">                            </div>                        </div>                        <div class="col-md-6 col-12">                            <label>Monto Máximo</label>                            <div class="form-group">                                <div class="input-group mb-3">                                    <div class="input-group-text">                                        <input class="form-check-input" type="checkbox" value="" @bind="hasMaxAmount">                                    </div>                                    <input type="text" class="form-control" aria-label="Text input with checkbox" disabled="@(!hasMaxAmount)" @bind="maxAmount">                                </div>                            </div>                        </div>                        <div class="col-12 d-flex justify-content-end">                            <button class="btn btn-primary mr-1 mb-1" @onclick="Save">Guardar</button>                            <NavLink href="/couponcodes" class="btn btn-light-secondary mr-1 mb-1">Cancelar</NavLink>                        </div>                    </div>                </div>            </div>        </div>    </section></div>@code{ [Parameter]    public string Code { get; set; }    CouponCodeOffType type = CouponCodeOffType.Percentage;    decimal value = 0;    int minAmount = 0;    bool hasMaxAmount = false;    int maxAmount = 0;    CouponCodeDto couponCode;    protected override void OnInitialized()    {        CouponCodeService.GetCouponCodeAsync(Code).ContinueWith(x =>        {            couponCode = x.Result.Result;            value = couponCode.Value;            type = couponCode.Type;            hasMaxAmount = couponCode.MaxAmount.HasValue;            maxAmount = couponCode.MaxAmount.GetValueOrDefault();            minAmount = couponCode.MinAmount;            StateHasChanged();        });    }    async Task Save(MouseEventArgs args)    {        var result = await CouponCodeService.UpdateCouponCodeAsync(new(couponCode.Id, Code, type, value, minAmount, hasMaxAmount ? maxAmount : null, couponCode.Categories, couponCode.SubCategories, couponCode.Products, couponCode.Customers, couponCode.DateStart, couponCode.DateExpire));        if (result.IsSuccess)        {            NavigationManager.NavigateTo("/couponcodes/" + result.Result.Code);        }        else        {            AlertService.Show("Editar Cupón", result.Validations.Messages.First().Message, "danger");        }    }    void RadioSelection(ChangeEventArgs args)    {        type = (CouponCodeOffType)int.Parse(args.Value.ToString());    }}