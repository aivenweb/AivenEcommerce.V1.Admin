@page "/customers/{Email}/details"
@inject ICustomerService CustomerService
@inject IBasketService BasketService
@inject IOrderService OrderService
@inject IWishListService WishListService
@inject NavigationManager NavigationManager

@inject IJSRuntime JSRuntime

<div class="main-content container-fluid">
    @if (customer is not null)
    {
        <div class="page-title">
            <h3>@customer.Name @customer.LastName <NavLink href="@($"/customers/{Email}/edit/")" class="btn icon btn-outline-primary"><i data-feather="edit"></i></NavLink></h3>
        </div>


        <section class="section">
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card ">
                        <div class="card-header">
                            <h4>Información</h4>
                        </div>
                        <div class="card-body">
                            <div class="row" style="padding-bottom:25px">
                                <div class="col-md-4 text-center">
                                    <div class="avatar avatar-xl"><img src="@customer.Picture.ToString()" /></div>
                                </div>
                                <div class="col-md-8 text-center">
                                    <p>@customer.Name @customer.LastName</p>
                                    <p>@customer.Email</p>
                                    <p>Cumpleaños: @customer.Birthday.ToString("dd/MM/yyyy")</p>

                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="card ">
                        <div class="card-header">
                            <h4>Redes Sociales</h4>
                        </div>
                        <div class="card-body">

                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card ">
                        <div class="card-header">
                            <h4>Total Comprado</h4>
                        </div>
                        <div class="card-body">
                            <div class="text-center mb-5">
                                <h6>Total</h6>
                                @if(orders is not null)
                                {
                                    <h1 class='text-purple'>@($"${orders.Where(x => x.PayDate.HasValue).Sum(x => x.TotalAmount)}")</h1>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card ">
                        <div class="card-header">
                            <h4>Cantidad de Compras</h4>
                        </div>
                        <div class="card-body">
                            <div class="text-center mb-5">
                                <h6>Total</h6>
                                @if(orders is not null)
                                {
                                    <h1 class='text-green'>@(orders.Count(x => x.PayDate.HasValue))</h1>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card ">
                        <div class="card-header">
                            <h4>Carrito</h4>
                        </div>
                        <div class="card-body">
                            <div class="row" style="padding-bottom:25px">
                                @if (basket?.Products.Any() ?? false)
                                {
                                    @foreach (var product in basket.Products.Take(5))
                                    {
                                        <div class="col-md-4 text-center">
                                            <div class="avatar avatar-lg"><NavLink href="@($"products/{product.Id}")"><img src="@product.Thumbnail.ToString()" /></NavLink></div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <h1 class='text-purple'>Vacio</h1>
                                }
                            </div>
                            <div class="d-flex justify-content-end">
                                <button class="btn icon icon-left btn-primary" @onclick="ShowAllBasket"><i data-feather="plus"></i> Ver Todos</button>
                            </div>
                        </div>
                    </div>

                    <div class="card ">
                        <div class="card-header">
                            <h4>Lista de Deseos</h4>
                        </div>
                        <div class="card-body">
                            <div class="row" style="padding-bottom:25px">
                                @if (wishlist?.Products.Any() ?? false)
                                {
                                    @foreach (var product in wishlist.Products.Take(5))
                                    {
                                        <div class="col-md-4 text-center">
                                            <div class="avatar avatar-lg"><NavLink href="@($"products/{product.Id}")"><img src="@product.Thumbnail.ToString()" /></NavLink></div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <h1 class='text-purple'>Vacio</h1>
                                }
                            </div>
                            <div class="d-flex justify-content-end">
                                <button class="btn icon icon-left btn-primary" @onclick="ShowAllWishList"><i data-feather="plus"></i> Ver Todos</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    }

</div>


@code {
    [Parameter]
    public string Email { get; set; }

    CustomerDto customer;
    BasketProductsDto basket;
    WishListProductsDto wishlist;
    IEnumerable<OrderDto> orders;

    protected override void OnInitialized()
    {
        UpdateCustomer();
        UpdateBasket();
        UpdateWishList();
        UpdateOrders();

    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return JSRuntime.InvokeVoidAsync("AivenEcommerceAdmin.replaceIcons").AsTask();
    }


    void UpdateCustomer()
    {
        this.CustomerService.GetAsync(Email)
        .ContinueWith(x =>
        {
            customer = x.Result.Result;
            StateHasChanged();
        });
    }

    void UpdateOrders()
    {
        this.OrderService.GetOrdersByCustomerAsync(Email)
        .ContinueWith(x =>
        {
            orders = x.Result.Result.Items;
            StateHasChanged();
        });
    }

    void UpdateBasket()
    {
        var basketTask = this.BasketService.GetBasketProductsAsync(Email)
        .ContinueWith(x =>
        {
            basket = x.Result.Result;
            StateHasChanged();
        });
    }

    void UpdateWishList()
    {
        var wishlistTask = this.WishListService.GetWishListWithProductInfoAsync(Email)
        .ContinueWith(x =>
        {
            wishlist = x.Result.Result;
            StateHasChanged();
        });
    }

    void ShowAllWishList(MouseEventArgs args)
    {
        NavigationManager.NavigateTo($"wishlists/{Email}/list");
    }

    void ShowAllBasket(MouseEventArgs args)
    {
        NavigationManager.NavigateTo($"baskets/{Email}/list");
    }
}
